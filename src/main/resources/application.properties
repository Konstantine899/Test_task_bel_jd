spring.application.name=records-app

# Порт приложения
server.port=8081

# База данных PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/records_db
spring.datasource.username=app_user
spring.datasource.password=secure_password_123

# Класс драйвера базы данных
# org.postgresql.Driver - Java-класс для работы с PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Время ожидания подключения (30 секунд)
spring.datasource.hikari.connection-timeout=30000

# Максимальное количество подключений в пуле (10 подключений)
spring.datasource.hikari.maximum-pool-size=10

# ==============================================
# НАСТРОЙКИ HIBERNATE (ORM - ВЗАИМОДЕЙСТВИЕ С БАЗОЙ)
# ==============================================

# Диалект Hibernate для PostgreSQL
# org.hibernate.dialect.PostgreSQLDialect - "переводчик" команд Hibernate в SQL PostgreSQL
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Стратегия создания схемы базы данных
# validate - Hibernate только проверяет схему (миграции управляют созданием)
# Варианты: validate (только проверка) | update (обновление) | create (создание заново) | create-drop (создание и удаление при завершении)
# spring.jpa.hibernate.ddl-auto=update
# Показывать SQL запросы в консоли (true - показывать)
# Очень полезно для отладки, но на production лучше отключать (false)
spring.jpa.show-sql=true
# Использовать комментарии в SQL (помогает при отладке)
spring.jpa.properties.hibernate.use_sql_comments=true
# Разрешаем Hibernate использовать тип PostgreSQL 'text' для полей @Lob
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# ==============================================
# НАСТРОЙКИ ШАБЛОНИЗАТОРА THYMELEAF
# ==============================================

spring.thymeleaf.cache=false
# Префикс для поиска HTML шаблонов
spring.thymeleaf.prefix=classpath:/templates/
# Суффикс для HTML файлов
spring.thymeleaf.suffix=.html

# ==============================================
# НАСТРОЙКИ КОДИРОВКИ
# ==============================================
spring.thymeleaf.encoding=UTF-8
# Кодировка для русского языка
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
# Принудительное применение кодировки для запросов
server.servlet.encoding.force-request=true
# Принудительное применение кодировки для ответов
server.servlet.encoding.force-response=true

# ==============================================
# НАСТРОЙКИ ЗАГРУЗКИ ФАЙЛОВ (MULTIPART)
# ==============================================
# Максимальный размер одного файла (10 мегабайт)
spring.servlet.multipart.max-file-size=10MB
# Максимальный размер всего запроса (10 мегабайт)
spring.servlet.multipart.max-request-size=10MB
# Включение обработки multipart-запросов
spring.servlet.multipart.enabled=true
# Пороговое значение для записи на диск (2KB - в памяти, больше - на диск)
spring.servlet.multipart.file-size-threshold=2KB
# Директория для временного хранения файлов
spring.servlet.multipart.location=/tmp/records_app_uploads

# START: Настройки миграций
# ==============================================
# МИГРАЦИИ ВЫПОЛНЯЮТСЯ ЧЕРЕЗ MigrationService
# ==============================================
spring.sql.init.mode=never

# Hibernate создает схему автоматически (create-drop)
# create-drop: создает таблицы при старте, удаляет при завершении
spring.jpa.hibernate.ddl-auto=create-drop

# Логирование для отладки
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.com.recordsapp=DEBUG
# END: Настройки миграций


